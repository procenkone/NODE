експорт - module.exports = {test}
імпорт - const {greeting} = require('./helper')
абсолютний шлях до файлу - __filename
абсолютний шлях до папки - __dirname
шлях з якого викликається нода -  process.cwd()
глобальна змінна - global.name (не використовувати! видима тільки в своєму модулі)

* вбудований модуль для роботи зі шляхами *
імпортнути - зареквайрети модуль - const path = require('path')

розділяє слешом шлях - const joinTest = path.join(__dirname,'test', 'test2', 'test3', 'test.txt')

приводить у нормальний вигляд шлях - path.normalize('test///test1//test2/////test\text.txt')

повертає абсолютний шлях і розстравляє слеші - path.resolve('test///test1//test2/text.txt')

* вбудований модуль для роботи з параметрами операційної системи компа *
імпортнути - зареквайрети модуль - const os = require('os')

добратись до ядер компа щоб розподілити навантаження на сервер - console.log(os.cpus())

визначити архітектуру операційної системи - console.log(os.arch()) 64,32,86..

* вбудований модуль для роботи з фвйловою системою *
const fs = require('fs')

створити файл - fs.writeFile(path.join(__dirname, "папка", 'text.txt'),'some data ',(err)=>{
                    if(err){
                        console.log(err)
                        throw err - зупиняє продовження коду
                    }
                })

читати файл - fs.readFile(path.join(__dirname, 'file', 'text.txt'),'utf8',(err,data)=>{
                 if(err){
                     console.log(err)
                     throw err
                 }
                  console.log(data)
              })

дописати файл - fs.appendFile(path.join(__dirname,'file', 'text.txt'),'\nNew Dadta',(err)=>{
                    if(err){
                        console.log(err)
                        throw err
                    }
                })

перезаписати файл - fs.appendFile(path.join(__dirname,'file','text.txt'),'\ndata',{flag: 'w'},(err)=>{
                        if(err){
                            console.log(err)
                            throw err
                        }
                    })

очистити файл - fs.truncate(path.join(__dirname,'file','text.txt'), (err)=>{
                      if(err){
                          console.log(err)
                          throw err
                      }
                 })

видалити файл - fs.unlink(path.join(__dirname,'file','text.txt'), err=>{
                    if(err){
                        console.log(err)
                    }
                })

створити папку - fs.mkdir(path.join(__dirname, 'public', 'text.txt'), (err)=>{
                     if(err){
                         console.log(err)
                         throw err
                     }
                 })
створити дерево папок - fs.mkdir(path.join(__dirname, 'public', 'text', 'test2', 'test3'),{recursive:true} ,(err)=>{
                            if(err){
                                console.log(err)
                                throw err
                            }
                        })

видалити папку - fs.rmdir(path.join(__dirname,'public/text/test2/test3'),(err)=>{
                     if(err){
                         console.log(err)
                         throw err
                     }
                 })

перевірити що є в папці - fs.readdir(path.join(__dirname,'public'), (err,data)=>{
                              if(err){
                                  console.log(err)
                                  throw err
                              }
                              console.log(data)
                          })

переіменувати файл - fs.rename(path.join(__dirname,'public','tets2.txt'),path.join(__dirname,'public','test33.txt'), (err)=>{
                         if(err){
                             console.log(err)
                             throw err
                         }
                     })

перемістити файл в інше місце - fs.rename(path.join(__dirname,'public','test33.txt'),path.join(__dirname,'test33.txt'),(err)=>{
                                    if(err){
                                        console.log(err)
                                        throw err
                                    }
                                })


  **** module.exports, require('./helper'),
   __filename, __dirname,
    process.cwd(), path.join,
   path.normalize, path.resolve,
    os.cpus(), os.arch(),
    fs.writeFile, fs.readFile, fs.appendFile
   fs.truncate, fs.unlink, fs.mkdir, fs.rmdir, fs.readdir,fs.rename *****